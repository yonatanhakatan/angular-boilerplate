// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
    @if $self {
        &,
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    } @else {
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
    #{$context} & {
        @content;
    }
}

/// Responsive manager
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
/// @link http://sass-guidelin.es/#breakpoint-manager Sass Guidelines - Breakpoint Manager
@mixin respond-to($breakpoint) {
    $query: map-get($breakpoints, $breakpoint);

    @if not $query {
        @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
    }

    @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
        @content;
    }
}

// Breakpoints media query based on Jake Archibald's Sass IE post: http://jakearchibald.github.io/sass-ie/
//
@mixin breakpoint($point) {
    // Get the width of the query based on the passed $point variable
    $width: get-list-value($breakpoints, $point);

    // If we're outputting for a fixed media query set...
    @if $fix-mqs {
        // ...and if we should apply these rules...
        @if $fix-mqs >= $width {
            // ...output the content the user gave us.
            @content;
        }
    }
    @else {
        // Otherwise, output it using a regular media query
        @media screen and (min-width: $width) {
            @content;
        }
    }
}

// Tweakpoint media querie based off @BPScott's Breakup (https://github.com/bpscott/breakup)
//
@mixin tweakpoint($width) {
    @if $fix-mqs {
        // ...and if we should apply these rules...
        @if $fix-mqs >= $width {
            // ...output the content the user gave us.
            @content;
        }
    }
    @else {
        @media (min-width: #{$width}) { @content; }
    }
}

@mixin hidpi-query() {
    @media only screen and (-webkit-min-device-pixel-ratio: 1.3),
    only screen and (-o-min-device-pixel-ratio: 13/10),
    only screen and (min-resolution: 120dpi) {
        @content;
    }
}

// Custom breakpoint mixin, can pass a full media query rule here to output if needed
// for use with max-width/multi-size queries. Pass true as second argument to output in the IE stylesheet
@mixin custom-breakpoint($query, $output-for-ie:false) {
    @if $old-ie and $output-for-ie {
        @content;
    }
    @else {
        @media only screen and #{$query} { @content; }
    }
}

// Old IE mixin - from Jake Archibald's Sass IE post: http://jakearchibald.github.io/sass-ie/
//
@mixin old-ie {
    // Only use this content if we're dealing with old IE
    @if $old-ie {
        @content;
    }
}

@mixin has-feature($feature) {
    html.#{$feature} & {
        @content;
    }
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculate-rem($size);
}
