// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: $base-url) {
  @return asset($base, $image-path, $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: $base-url) {
  @return asset($base, $font-path, $path);
}

// Search a list of lists ($haystack) for value ($needle) at the first position.
// Returns that item in the list, or false if not found.
// Based on breakup-list-key-search mixin by @BPScott - (https://github.com/bpscott/breakup)
@function get-list-value($haystack, $needle) {

	@each $haystack-item in $haystack {
		@if $needle == nth($haystack-item, 1) {
			@return nth($haystack-item, 2);
		}
	}

	@return false;
}

@function calculate-rem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}
